// Licensed to Elasticsearch B.V under one or more agreements.
// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.
// See the LICENSE file in the project root for more information
// ███╗   ██╗ ██████╗ ████████╗██╗ ██████╗███████╗
// ████╗  ██║██╔═══██╗╚══██╔══╝██║██╔════╝██╔════╝
// ██╔██╗ ██║██║   ██║   ██║   ██║██║     █████╗  
// ██║╚██╗██║██║   ██║   ██║   ██║██║     ██╔══╝  
// ██║ ╚████║╚██████╔╝   ██║   ██║╚██████╗███████╗
// ╚═╝  ╚═══╝ ╚═════╝    ╚═╝   ╚═╝ ╚═════╝╚══════╝
// -----------------------------------------------
//  
// This file is automatically generated 
// Please do not edit these files manually
// Run the following in the root of the repos:
//
// 		*NIX 		:	./build.sh codegen
// 		Windows 	:	build.bat codegen
//
// -----------------------------------------------
// ReSharper disable RedundantUsingDirective
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Elasticsearch.Net;
using Elastic.Transport;
using static Elastic.Transport.HttpMethod;

// ReSharper disable InterpolatedStringExpressionIsNotIFormattable
// ReSharper disable once CheckNamespace
// ReSharper disable InterpolatedStringExpressionIsNotIFormattable
// ReSharper disable RedundantExtendsListEntry
namespace Elasticsearch.Net.Specification._InternalApi
{
	///<summary>
	/// _ Internal APIs.
	/// <para>Not intended to be instantiated directly. Use the <see cref = "IElasticLowLevelClient._Internal"/> property
	/// on <see cref = "IElasticLowLevelClient"/>.
	///</para>
	///</summary>
	public class LowLevel_InternalNamespace : NamespacedClientProxy
	{
		internal LowLevel_InternalNamespace(ElasticLowLevelClient client): base(client)
		{
		}

		///<summary>DELETE on /_internal/desired_nodes <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-desired-nodes.html</para></summary>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		public TResponse DeleteDesiredNodes<TResponse>(DeleteDesiredNodesRequestParameters requestParameters = null)
			where TResponse : class, ITransportResponse, new() => DoRequest<TResponse>(DELETE, "_internal/desired_nodes", null, RequestParams(requestParameters));
		///<summary>DELETE on /_internal/desired_nodes <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/delete-desired-nodes.html</para></summary>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		[MapsApi("_internal.delete_desired_nodes", "")]
		public Task<TResponse> DeleteDesiredNodesAsync<TResponse>(DeleteDesiredNodesRequestParameters requestParameters = null, CancellationToken ctx = default)
			where TResponse : class, ITransportResponse, new() => DoRequestAsync<TResponse>(DELETE, "_internal/desired_nodes", ctx, null, RequestParams(requestParameters));
		///<summary>GET on /_internal/desired_nodes/_latest <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/get-desired-nodes.html</para></summary>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		public TResponse GetDesiredNodes<TResponse>(GetDesiredNodesRequestParameters requestParameters = null)
			where TResponse : class, ITransportResponse, new() => DoRequest<TResponse>(GET, "_internal/desired_nodes/_latest", null, RequestParams(requestParameters));
		///<summary>GET on /_internal/desired_nodes/_latest <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/get-desired-nodes.html</para></summary>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		[MapsApi("_internal.get_desired_nodes", "")]
		public Task<TResponse> GetDesiredNodesAsync<TResponse>(GetDesiredNodesRequestParameters requestParameters = null, CancellationToken ctx = default)
			where TResponse : class, ITransportResponse, new() => DoRequestAsync<TResponse>(GET, "_internal/desired_nodes/_latest", ctx, null, RequestParams(requestParameters));
		///<summary>GET on /_internal/_health</summary>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		public TResponse Health<TResponse>(HealthRequestParameters requestParameters = null)
			where TResponse : class, ITransportResponse, new() => DoRequest<TResponse>(GET, "_internal/_health", null, RequestParams(requestParameters));
		///<summary>GET on /_internal/_health</summary>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		[MapsApi("_internal.health", "")]
		public Task<TResponse> HealthAsync<TResponse>(HealthRequestParameters requestParameters = null, CancellationToken ctx = default)
			where TResponse : class, ITransportResponse, new() => DoRequestAsync<TResponse>(GET, "_internal/_health", ctx, null, RequestParams(requestParameters));
		///<summary>GET on /_internal/_health/{component}</summary>
		///<param name = "component">A component of the cluster, as returned by the top-level health API</param>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		public TResponse Health<TResponse>(string component, HealthRequestParameters requestParameters = null)
			where TResponse : class, ITransportResponse, new() => DoRequest<TResponse>(GET, Url($"_internal/_health/{component:component}"), null, RequestParams(requestParameters));
		///<summary>GET on /_internal/_health/{component}</summary>
		///<param name = "component">A component of the cluster, as returned by the top-level health API</param>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		[MapsApi("_internal.health", "component")]
		public Task<TResponse> HealthAsync<TResponse>(string component, HealthRequestParameters requestParameters = null, CancellationToken ctx = default)
			where TResponse : class, ITransportResponse, new() => DoRequestAsync<TResponse>(GET, Url($"_internal/_health/{component:component}"), ctx, null, RequestParams(requestParameters));
		///<summary>GET on /_internal/_health/{component}/{feature}</summary>
		///<param name = "component">A component of the cluster, as returned by the top-level health API</param>
		///<param name = "feature">A feature of a component of the cluster, as returned by the top-level health API</param>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		public TResponse Health<TResponse>(string component, string feature, HealthRequestParameters requestParameters = null)
			where TResponse : class, ITransportResponse, new() => DoRequest<TResponse>(GET, Url($"_internal/_health/{component:component}/{feature:feature}"), null, RequestParams(requestParameters));
		///<summary>GET on /_internal/_health/{component}/{feature}</summary>
		///<param name = "component">A component of the cluster, as returned by the top-level health API</param>
		///<param name = "feature">A feature of a component of the cluster, as returned by the top-level health API</param>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		[MapsApi("_internal.health", "component, feature")]
		public Task<TResponse> HealthAsync<TResponse>(string component, string feature, HealthRequestParameters requestParameters = null, CancellationToken ctx = default)
			where TResponse : class, ITransportResponse, new() => DoRequestAsync<TResponse>(GET, Url($"_internal/_health/{component:component}/{feature:feature}"), ctx, null, RequestParams(requestParameters));
		///<summary>PUT on /_internal/desired_nodes/{history_id}/{version} <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/update-desired-nodes.html</para></summary>
		///<param name = "historyId">the history id</param>
		///<param name = "version">the version number</param>
		///<param name = "body">the specification of the desired nodes</param>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		public TResponse UpdateDesiredNodes<TResponse>(string historyId, int version, PostData body, UpdateDesiredNodesRequestParameters requestParameters = null)
			where TResponse : class, ITransportResponse, new() => DoRequest<TResponse>(PUT, Url($"_internal/desired_nodes/{historyId:historyId}/{version:version}"), body, RequestParams(requestParameters));
		///<summary>PUT on /_internal/desired_nodes/{history_id}/{version} <para>https://www.elastic.co/guide/en/elasticsearch/reference/current/update-desired-nodes.html</para></summary>
		///<param name = "historyId">the history id</param>
		///<param name = "version">the version number</param>
		///<param name = "body">the specification of the desired nodes</param>
		///<param name = "requestParameters">Request specific configuration such as querystring parameters &amp; request specific connection settings.</param>
		///<remarks>Note: Experimental within the Elasticsearch server, this functionality is Experimental and may be changed or removed completely in a future release. Elastic will take a best effort approach to fix any issues, but experimental features are not subject to the support SLA of official GA features. This functionality is subject to potential breaking changes within a minor version, meaning that your referencing code may break when this library is upgraded.</remarks>
		[MapsApi("_internal.update_desired_nodes", "history_id, version, body")]
		public Task<TResponse> UpdateDesiredNodesAsync<TResponse>(string historyId, int version, PostData body, UpdateDesiredNodesRequestParameters requestParameters = null, CancellationToken ctx = default)
			where TResponse : class, ITransportResponse, new() => DoRequestAsync<TResponse>(PUT, Url($"_internal/desired_nodes/{historyId:historyId}/{version:version}"), ctx, body, RequestParams(requestParameters));
	}
}